# DO NOT EDIT! GENERATED AUTOMATICALLY!
# Copyright (C) 2002-2009 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
#
# This file represents the compiled summary of the specification in
# gnulib-cache.m4. It lists the computed macro invocations that need
# to be invoked from configure.ac.
# In projects using CVS, this file can be treated like other built files.


# This macro should be invoked from ./configure.ac, in the section
# "Checks for programs", right after AC_PROG_CC, and certainly before
# any checks for libraries, header files, types and library functions.
AC_DEFUN([libgl_EARLY],
[
  m4_pattern_forbid([^gl_[A-Z]])dnl the gnulib macro namespace
  m4_pattern_allow([^gl_ES$])dnl a valid locale name
  m4_pattern_allow([^gl_LIBOBJS$])dnl a variable
  m4_pattern_allow([^gl_LTLIBOBJS$])dnl a variable
  AC_REQUIRE([AC_PROG_RANLIB])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
])

# This macro should be invoked from ./configure.ac, in the section
# "Check for header files, types and library functions".
AC_DEFUN([libgl_INIT],
[
  AM_CONDITIONAL([GL_COND_LIBTOOL], [true])
  gl_cond_libtool=true
  m4_pushdef([AC_LIBOBJ], m4_defn([libgl_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([libgl_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([libgl_LIBSOURCES]))
  m4_pushdef([libgl_LIBSOURCES_LIST], [])
  m4_pushdef([libgl_LIBSOURCES_DIR], [])
  gl_COMMON
  gl_source_base='lib/gl'
  AC_REQUIRE([gl_HEADER_ERRNO_H])
  gl_FUNC_GETHOSTNAME
  gl_UNISTD_MODULE_INDICATOR([gethostname])
  AC_SUBST([LIBINTL])
  AC_SUBST([LTLIBINTL])
  gl_HEADER_STRING_H
  gl_FUNC_STRVERSCMP
  gl_STRING_MODULE_INDICATOR([strverscmp])
  gl_HEADER_SYS_SOCKET
  AC_PROG_MKDIR_P
  gl_UNISTD_H
  m4_ifval(libgl_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([libgl_LIBSOURCES_DIR])[ ||
      for gl_file in ]libgl_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([libgl_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([libgl_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([libgl_LIBSOURCES_DIR])
  m4_popdef([libgl_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    libgl_libobjs=
    libgl_ltlibobjs=
    if test -n "$libgl_LIBOBJS"; then
      # Remove the extension.
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $libgl_LIBOBJS; do echo "$i"; done | sed "$sed_drop_objext" | sort | uniq`; do
        libgl_libobjs="$libgl_libobjs $i.$ac_objext"
        libgl_ltlibobjs="$libgl_ltlibobjs $i.lo"
      done
    fi
    AC_SUBST([libgl_LIBOBJS], [$libgl_libobjs])
    AC_SUBST([libgl_LTLIBOBJS], [$libgl_ltlibobjs])
  ])
  gltests_libdeps=
  gltests_ltlibdeps=
  m4_pushdef([AC_LIBOBJ], m4_defn([libgltests_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([libgltests_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([libgltests_LIBSOURCES]))
  m4_pushdef([libgltests_LIBSOURCES_LIST], [])
  m4_pushdef([libgltests_LIBSOURCES_DIR], [])
  gl_COMMON
  gl_source_base='lib/gl/tests'
  m4_ifval(libgltests_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([libgltests_LIBSOURCES_DIR])[ ||
      for gl_file in ]libgltests_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([libgltests_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([libgltests_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([libgltests_LIBSOURCES_DIR])
  m4_popdef([libgltests_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    libgltests_libobjs=
    libgltests_ltlibobjs=
    if test -n "$libgltests_LIBOBJS"; then
      # Remove the extension.
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $libgltests_LIBOBJS; do echo "$i"; done | sed "$sed_drop_objext" | sort | uniq`; do
        libgltests_libobjs="$libgltests_libobjs $i.$ac_objext"
        libgltests_ltlibobjs="$libgltests_ltlibobjs $i.lo"
      done
    fi
    AC_SUBST([libgltests_LIBOBJS], [$libgltests_libobjs])
    AC_SUBST([libgltests_LTLIBOBJS], [$libgltests_ltlibobjs])
  ])
])

# Like AC_LIBOBJ, except that the module name goes
# into libgl_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([libgl_LIBOBJ], [
  AS_LITERAL_IF([$1], [libgl_LIBSOURCES([$1.c])])dnl
  libgl_LIBOBJS="$libgl_LIBOBJS $1.$ac_objext"
])

# Like AC_REPLACE_FUNCS, except that the module name goes
# into libgl_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([libgl_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [libgl_LIBOBJ($ac_func)])
])

# Like AC_LIBSOURCES, except the directory where the source file is
# expected is derived from the gnulib-tool parameterization,
# and alloca is special cased (for the alloca-opt module).
# We could also entirely rely on EXTRA_lib..._SOURCES.
AC_DEFUN([libgl_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([libgl_LIBSOURCES_DIR], [lib/gl])
      m4_append([libgl_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])

# Like AC_LIBOBJ, except that the module name goes
# into libgltests_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([libgltests_LIBOBJ], [
  AS_LITERAL_IF([$1], [libgltests_LIBSOURCES([$1.c])])dnl
  libgltests_LIBOBJS="$libgltests_LIBOBJS $1.$ac_objext"
])

# Like AC_REPLACE_FUNCS, except that the module name goes
# into libgltests_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([libgltests_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [libgltests_LIBOBJ($ac_func)])
])

# Like AC_LIBSOURCES, except the directory where the source file is
# expected is derived from the gnulib-tool parameterization,
# and alloca is special cased (for the alloca-opt module).
# We could also entirely rely on EXTRA_lib..._SOURCES.
AC_DEFUN([libgltests_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([libgltests_LIBSOURCES_DIR], [lib/gl/tests])
      m4_append([libgltests_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])

# This macro records the list of files which have been installed by
# gnulib-tool and may be removed by future gnulib-tool invocations.
AC_DEFUN([libgl_FILE_LIST], [
  build-aux/link-warning.h
  lib/dummy.c
  lib/errno.in.h
  lib/gethostname.c
  lib/gettext.h
  lib/string.in.h
  lib/strverscmp.c
  lib/sys_socket.in.h
  lib/unistd.in.h
  lib/w32sock.h
  m4/00gnulib.m4
  m4/errno_h.m4
  m4/extensions.m4
  m4/gethostname.m4
  m4/gnulib-common.m4
  m4/include_next.m4
  m4/sockpfaf.m4
  m4/string_h.m4
  m4/strverscmp.m4
  m4/sys_socket_h.m4
  m4/unistd_h.m4
])
